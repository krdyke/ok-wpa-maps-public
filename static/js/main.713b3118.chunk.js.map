{"version":3,"sources":["WebMapView.js","App.js","serviceWorker.js","index.js"],"names":["getRandomInt","max","Math","floor","random","WebMapView","props","WPATilesUrl","WPAMapsLandParcelsUrl","sectionsLayerUrl","mapRef","React","createRef","workflow","editThis","bind","sayThanks","loadModules","css","then","ArcGISMap","Basemap","MapView","FeatureLayer","TileLayer","Editor","watchUtils","WPATiles","url","map","basemap","baseLayers","view","container","current","highlightOptions","color","fillOpacity","popup","dockEnabled","dockOptions","buttonEnabled","breakpoint","center","zoom","template","title","content","type","fieldInfos","fieldName","label","overwriteActions","actions","id","className","WPAMapsLandParcels","popupTemplate","formTemplate","elements","groupDisplay","console","log","on","e","editor","allowedWorkflows","supportingWidgetDefaults","featureForm","fieldConfig","name","required","layerInfos","layer","allowAttachments","deleteEnabled","postInitialize","init","this","messages","widgetLabel","addFeature","editFeature","randomId","that","event","action","randomSectionId","sectionsLayer","definitionExpression","when","queryExtent","response","goTo","extent","add","popupEnabled","ui","queryObjectIds","objectIds","length","queryFeatures","features","geometry","alert","close","viewModel","activeWorkFlow","visible","startUpdateWorkflowAtFeatureEdit","selectedFeature","spinnerEnabled","setTimeout","arrComp","domNode","getElementsByClassName","setAttribute","addEventListener","evt","preventDefault","remove","ref","Component","App","state","prevProps","prevState","snapshot","OAuthInfo","esriId","info","appId","portalUrl","registerOAuthInfos","checkSignInStatus","creds","setState","catch","getCredential","welcomeScreen","onClick","scale","class","icon","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.713b3118.chunk.js","sourcesContent":["import React from 'react';\r\nimport { loadModules } from 'esri-loader';\r\n\r\nfunction getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\n\r\nexport class WebMapView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.WPATilesUrl = 'https://tiles.arcgis.com/tiles/jWQlP64OuwDh6GGX/arcgis/rest/services/_wpa_all_6Aug2020/MapServer';\r\n    this.WPAMapsLandParcelsUrl = 'https://services1.arcgis.com/jWQlP64OuwDh6GGX/arcgis/rest/services/WPA_Maps_Land_Parcels/FeatureServer/0';\r\n    this.sectionsLayerUrl = 'https://services1.arcgis.com/jWQlP64OuwDh6GGX/ArcGIS/rest/services/Oklahoma_Public_Land_Survey_Sections/FeatureServer/0';\r\n    this.mapRef = React.createRef();\r\n    this.workflow = props.workflow;\r\n    this.editThis = this.editThis.bind(this);\r\n    this.sayThanks = this.sayThanks.bind(this);\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\r\n    loadModules(['esri/Map', 'esri/Basemap', 'esri/views/MapView', \r\n                 'esri/layers/FeatureLayer','esri/widgets/Feature','esri/layers/TileLayer',\r\n                 'esri/widgets/Editor', 'esri/core/watchUtils',\r\n                 'esri/widgets/AreaMeasurement2D'], { css: true })\r\n    .then(([ArcGISMap, Basemap, MapView, FeatureLayer, Feature, TileLayer, Editor, watchUtils, AreaMeasurement2D]) => {\r\n\r\n      const WPATiles = new TileLayer({\r\n        url: this.WPATilesUrl\r\n      })\r\n      //this.map.add(WPATiles);\r\n\r\n\r\n      this.map = new ArcGISMap({\r\n        basemap: new Basemap({baseLayers:[WPATiles]})\r\n      });\r\n\r\n      this.view = new MapView({\r\n        container: this.mapRef.current,\r\n        map: this.map,\r\n        highlightOptions: {\r\n          color: '#fe5c00',\r\n          fillOpacity: 0.1\r\n        },\r\n        popup: {\r\n          dockEnabled: true,\r\n          dockOptions: {\r\n            // Disables the dock button from the popup\r\n            buttonEnabled: false,\r\n            // Ignore the default sizes that trigger responsive docking\r\n            breakpoint: false\r\n          }\r\n        },\r\n        center: [-98.5, 35.5],\r\n        zoom: 8\r\n      });\r\n    \r\n\r\n      //measurement widget, but let's not use it for now\r\n      /*\r\n      this.measurement = new AreaMeasurement2D({\r\n        view: this.view,\r\n        activeTool: 'area',\r\n        unit: 'acres'\r\n      });\r\n\r\n      this.view.ui.add(this.measurement, 'bottom-left');\r\n      */\r\n\r\n\r\n      const editThisAction = {\r\n          title: 'Edit feature',\r\n          id: 'edit-this',\r\n          className: 'esri-icon-edit'\r\n        };\r\n\r\n      const thisLooksOkAction = {\r\n          title: 'Looks good!',\r\n          id: 'this-looks-ok',\r\n          className: 'esri-icon-check-mark'\r\n        };\r\n\r\n      const template = {\r\n        title: 'Please doublecheck the info below.',\r\n        content: [\r\n          {\r\n            type: 'fields',\r\n            fieldInfos: [\r\n              {\r\n                fieldName: 'OwnerLastName',\r\n                label: 'Owner\\'s Last Name (if an individual)'\r\n              },\r\n\r\n              {\r\n                fieldName: 'OwnerFirstNameAndMI',\r\n                label: 'Owner\\'s First Name or initials (if an individual)'\r\n              },   \r\n              {\r\n                fieldName: 'OwnerOrgName',\r\n                label: 'Owner (if an entity or organization)'\r\n              },\r\n              {\r\n                fieldName: 'LandValue',\r\n                label: 'Land Value'\r\n              },\r\n              {\r\n                fieldName: 'ImprovementsValue2',\r\n                label: 'Improvements Value'\r\n              },\r\n              {\r\n                fieldName: 'TaxExempt',\r\n                label: 'Marked with an X?'\r\n              }\r\n            ]\r\n          }\r\n        ],\r\n        overwriteActions: true,\r\n        actions: [thisLooksOkAction, editThisAction]\r\n      }\r\n\r\n      const formTemplate = {\r\n        title: \"Land Info\",\r\n        elements: [{ // Autocasts to new GroupElement\r\n          type: \"group\",\r\n          label: \"Owner Information\",\r\n          elements: [\r\n              {\r\n                type: \"field\",\r\n                fieldName: 'OwnerLastName',\r\n                label: 'Owner\\'s Last Name (if an individual)'\r\n              },\r\n\r\n              {\r\n                type: \"field\",\r\n                fieldName: 'OwnerFirstNameAndMI',\r\n                label: 'Owner\\'s First Name or initials (if an individual)'\r\n              },   \r\n              {\r\n                type: \"field\",\r\n                fieldName: 'OwnerOrgName',\r\n                label: 'Owner (if an entity or organization)'\r\n              }\r\n              \r\n           \r\n          ]\r\n        },\r\n\r\n        { // Autocasts to new GroupElement\r\n          type: \"group\",\r\n          label: \"Land and Improvement Valuation\",\r\n          elements: [\r\n             {\r\n                type: \"field\",\r\n                fieldName: 'LandValue',\r\n                label: 'Land Value'\r\n              },\r\n              {\r\n                type: \"field\",\r\n                fieldName: 'ImprovementsValue2',\r\n                label: 'Improvements Value'\r\n              },\r\n          ]\r\n        },\r\n\r\n           {\r\n                type: \"field\",\r\n                fieldName: 'TaxExempt',\r\n                label: 'Marked with an X?'\r\n              }\r\n\r\n        ]\r\n      }\r\n      var WPAMapsLandParcels = new FeatureLayer({\r\n        url: this.WPAMapsLandParcelsUrl,\r\n        popupTemplate: template,\r\n        formTemplate: formTemplate,\r\n        groupDisplay: 'sequential'\r\n      });\r\n\r\n      console.log(WPAMapsLandParcels);\r\n      \r\n      WPAMapsLandParcels.on(\"edits\", (e) => {console.log(e)} );\r\n\r\n      this.editor = new Editor({\r\n          view: this.view,\r\n          allowedWorkflows: [this.workflow],\r\n          supportingWidgetDefaults: {\r\n            featureForm: {\r\n              groupDisplay: 'sequential',\r\n              fieldConfig: [\r\n              {\r\n                name: 'OwnerLastName',\r\n                label: 'Owner\\'s Last Name (if an individual)',\r\n                required: false\r\n              },\r\n\r\n              {\r\n                name: 'OwnerFirstNameAndMI',\r\n                label: 'Owner\\'s First Name or initials (if an individual)',\r\n                required: false\r\n              },   \r\n              {\r\n                name: 'OwnerOrgName',\r\n                label: 'Owner (if an entity or organization)',\r\n                required: false\r\n              },\r\n              {\r\n                name: 'LandValue',\r\n                label: 'Land Value',\r\n                required: false\r\n              },\r\n              {\r\n                name: 'ImprovementsValue2',\r\n                label: 'Improvements Value',\r\n                required: false\r\n              },\r\n             {\r\n                name: 'TaxExempt',\r\n                label: 'Marked with an X?',\r\n                required: false\r\n              }\r\n            ],\r\n            }\r\n          },\r\n          layerInfos: [{\r\n            view: this.view,\r\n            layer: WPAMapsLandParcels,\r\n            //fieldConfig: \r\n            allowAttachments: false,\r\n            deleteEnabled: false\r\n          }]\r\n        });\r\n\r\n      this.editor.postInitialize = function(){\r\n        // I can't believe this is the only way to override widget labelling, but here we are\r\n        watchUtils.init(this,'messages', (messages)=>{\r\n          messages.widgetLabel = 'WPA Maps';\r\n          messages.addFeature = 'Draw a new shape';\r\n          messages.editFeature = 'Review an existing record';\r\n        });\r\n      };\r\n\r\n\r\n\r\n\r\n      // Event handler that fires each time an action is clicked\r\n      var that = this;\r\n      this.view.popup.on(\"trigger-action\", function (event) {\r\n            if (event.action.id === \"edit-this\") {\r\n              that.editThis();\r\n            }\r\n\r\n            if (event.action.id === 'this-looks-ok'){\r\n              that.sayThanks();\r\n            }\r\n\r\n          });\r\n\r\n\r\n     \r\n\r\n\r\n      // for creation, pick a random PLSS Section and zoom to it\r\n      if (this.workflow === 'create') {\r\n          var randomSectionId = getRandomInt(70915);\r\n          const sectionsLayer = new FeatureLayer({\r\n            url: this.sectionsLayerUrl,\r\n            definitionExpression: 'OBJECTID = ' + randomSectionId\r\n          });\r\n\r\n          sectionsLayer\r\n            .when(() => {\r\n              return sectionsLayer.queryExtent();\r\n            })\r\n            .then((response) => {\r\n              this.view.goTo(response.extent);\r\n            })\r\n          this.map.add(sectionsLayer);\r\n          WPAMapsLandParcels.popupEnabled = false;\r\n          this.view.ui.add(this.editor, 'bottom-right');\r\n          //this.editor.startCreateWorkflowAtFeatureCreation({layer: WPAMapsLandParcels, template: template});\r\n      }\r\n\r\n\r\n      var randomId;\r\n      // for reviewing, pick a random polygon and zoom to it\r\n      if (this.workflow === 'update') {\r\n          WPAMapsLandParcels.queryObjectIds().then((objectIds)=>{\r\n            randomId = getRandomInt(objectIds.length - 1);\r\n            WPAMapsLandParcels.definitionExpression = \"OBJECTID = \" + objectIds[randomId];\r\n\r\n          WPAMapsLandParcels\r\n            .when(() => {\r\n              return WPAMapsLandParcels.queryFeatures();\r\n            })\r\n            .then((response) => {\r\n              this.view.goTo(response.features[0].geometry.extent);\r\n             // this.editor.startUpdateWorkflowAtFeatureEdit(response.features[0]);\r\n\r\n            })\r\n          });\r\n\r\n      }\r\n\r\n      this.map.add(WPAMapsLandParcels);\r\n\r\n      //this.view.ui.add(this.editor, 'top-right');\r\n      });\r\n  }\r\n  sayThanks() {\r\n    alert(\"thank you\");\r\n    //TODO add an incrementing integer for 'numberOfTimesChecked' or something along those lines.\r\n    this.view.popup.close();\r\n  }\r\n  editThis() {\r\n        var view = this.view;\r\n        var editor = this.editor; \r\n        view.when(function () {\r\n\r\n  \r\n\r\n            // If the EditorViewModel's activeWorkflow is null, make the popup not visible\r\n            if (!editor.viewModel.activeWorkFlow) {\r\n              view.popup.visible = false;\r\n              // Call the Editor update feature edit workflow\r\n\r\n              editor.startUpdateWorkflowAtFeatureEdit(\r\n                view.popup.selectedFeature\r\n              );\r\n              view.ui.add(editor, \"bottom-right\");\r\n              view.popup.spinnerEnabled = false;\r\n            }\r\n\r\n            // We need to set a timeout to ensure the editor widget is fully rendered. We\r\n            // then grab it from the DOM stack\r\n            setTimeout(function () {\r\n              // Use the editor's back button as a way to cancel out of editing\r\n              let arrComp = editor.domNode.getElementsByClassName(\r\n                \"esri-editor__back-button esri-interactive\"\r\n              );\r\n              if (arrComp.length === 1) {\r\n                // Add a tooltip for the back button\r\n                arrComp[0].setAttribute(\r\n                  \"title\",\r\n                  \"Cancel edits, return to popup\"\r\n                );\r\n                // Add a listerner to listen for when the editor's back button is clicked\r\n                arrComp[0].addEventListener(\"click\", function (evt) {\r\n                  // Prevent the default behavior for the back button and instead remove the editor and reopen the popup\r\n                  evt.preventDefault();\r\n                  view.ui.remove(editor);\r\n                  // view.popup.open({\r\n                  //   features: features\r\n                  // });\r\n                });\r\n              }\r\n            }, 150);\r\n        \r\n          \r\n        });\r\n      }\r\n\r\n  componentWillUnmount() {\r\n    if (this.view) {\r\n      // destroy the map view\r\n      this.view.container = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"webmap\" ref={this.mapRef} />\r\n      </>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\nimport { WebMapView } from './WebMapView';\nimport { loadModules } from 'esri-loader';\nimport \"@esri/calcite-components\";\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {'welcomeScreen' : true,\n                  'credentials': false}\n  }\n\n\n  componentDidUpdate(prevProps, prevState, snapshot){\n    console.log(\"componentDidUpdate:\")\n    console.log(prevState);\n    console.log(this.state);\n  }\n\n\n   componentDidMount() {\n    var that = this;\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    loadModules([\"esri/identity/OAuthInfo\",\"esri/identity/IdentityManager\",], { css: true })\n    .then(([OAuthInfo, esriId]) => {\n      var info = new OAuthInfo({\n          // Swap this ID out with registered application ID\n          appId: \"l3OWRmRCGfkAN4Dh\",\n          // Uncomment the next line and update if using your own portal\n          portalUrl: \"http://osu-geog.maps.arcgis.com/\",\n          // Uncomment the next line to prevent the user's signed in state from being shared with other apps on the same domain with the same authNamespace value.\n          // authNamespace: \"portal_oauth_inline\",\n          popup: false\n      });\n\n      esriId.registerOAuthInfos([info]);\n\n      esriId\n        .checkSignInStatus(info.portalUrl + \"/sharing\")\n        .then((creds) => {\n          console.log(creds);\n          that.setState({'credentials': creds});\n        })\n        .catch(esriId.getCredential(info.portalUrl + \"/sharing\"));\n   });\n\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        {this.state.welcomeScreen &&\n          <>\n            <h1>Choose your path:</h1>\n\n            <button onClick={() => this.setState({welcomeScreen: false, workflow: 'create'})}>\n                <calcite-icon scale='l' class=\"big-icon\" icon=\"addInNew\"></calcite-icon> \n                <br/>Draw some shapes\n            </button>\n            <h2>or</h2>\n            <button onClick={() => this.setState({welcomeScreen: false, workflow: 'update'})}>\n                <calcite-icon scale='l' class=\"big-icon\" icon=\"editAttributes\"></calcite-icon> \n                <br/>Review existing shapes\n            </button>\n          </>\n        }\n        \n        {!this.state.welcomeScreen &&\n          <WebMapView workflow={this.state.workflow}/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}